# Generated by Django 4.0 on 2023-07-30 08:26

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('smm', '0020_mailing_text'),
    ]

    operations = [
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, verbose_name='Название')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Описание')),
                ('short', models.CharField(blank=True, max_length=500, null=True, verbose_name='Короткое описание (до 500 знаков)')),
                ('payment', models.CharField(blank=True, max_length=200, null=True, verbose_name='Стоимость')),
                ('continuance', models.CharField(blank=True, max_length=200, null=True, verbose_name='Продолжительность')),
                ('about', models.TextField(blank=True, null=True, verbose_name='Какие боли закрывает?')),
                ('country', models.IntegerField(default=5, verbose_name='Сколько человек по плану')),
                ('next_step', models.TextField(blank=True, null=True, verbose_name='Следующий шаг по продуктам')),
                ('prev_step', models.TextField(blank=True, null=True, verbose_name='Предыдущий шаг по продуктам')),
                ('created_date', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('site', models.CharField(blank=True, max_length=500, null=True, verbose_name='Ссылка на лендинг')),
            ],
            options={
                'db_table': 'events_event',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='EventPlan',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_date', models.DateTimeField(blank=True, verbose_name='Дата начала')),
                ('end_date', models.DateTimeField(blank=True, null=True, verbose_name='Дата завершения')),
                ('season', models.CharField(default='2023/2024', max_length=100, verbose_name='Сезон')),
                ('is_period', models.BooleanField(default=False, verbose_name='Это периодичное мероприятие?')),
                ('site', models.CharField(blank=True, max_length=500, null=True, verbose_name='Ссылка на лендинг (перекроет ссылку тренинга)')),
                ('period', models.PositiveIntegerField(blank=True, null=True, verbose_name='Введите период (в днях)')),
            ],
            options={
                'db_table': 'event_plan',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='EventState',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=300, verbose_name='Статус')),
                ('description', models.CharField(blank=True, max_length=200, null=True, verbose_name='Описание')),
            ],
            options={
                'db_table': 'event_state',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='EventType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=300, verbose_name='Тип мероприятия')),
                ('description', models.CharField(blank=True, max_length=200, null=True, verbose_name='Описание')),
            ],
            options={
                'db_table': 'event_types',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Lid',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateTimeField(auto_now_add=True)),
                ('lid_code', models.CharField(blank=True, max_length=50, null=True, verbose_name='Код заявки')),
                ('block_code', models.CharField(blank=True, max_length=50, null=True, verbose_name='Код блока')),
                ('form_name', models.CharField(blank=True, max_length=100, null=True, verbose_name='Форма на сайте')),
                ('name', models.CharField(blank=True, max_length=250, null=True, verbose_name='Имя')),
                ('phone', models.CharField(blank=True, max_length=250, null=True, verbose_name='Телефон')),
                ('email', models.CharField(blank=True, max_length=250, null=True, verbose_name='Почта')),
                ('utm_source', models.CharField(blank=True, max_length=50, null=True, verbose_name='utm_source')),
                ('utm_type_source', models.CharField(blank=True, max_length=50, null=True, verbose_name='utm_type_source')),
                ('utm_medium', models.CharField(blank=True, max_length=50, null=True, verbose_name='utm_medium')),
                ('utm_type_content', models.CharField(blank=True, max_length=50, null=True, verbose_name='utm_type_content')),
                ('utm_campaign', models.CharField(blank=True, max_length=50, null=True, verbose_name='utm_campaign')),
                ('utm_term', models.CharField(blank=True, max_length=50, null=True, verbose_name='utm_term')),
                ('utm_content', models.CharField(blank=True, max_length=50, null=True, verbose_name='utm_content')),
                ('client_id', models.IntegerField(blank=True, null=True, verbose_name='Клиент (если новый, то пусто)')),
                ('event_id', models.IntegerField(blank=True, null=True, verbose_name='Мероприятие (пусто, если клиент не знает чего хочет')),
                ('action', models.CharField(max_length=250, verbose_name='Действие: позвонил, написал, оставил заявку через сайт и тд')),
                ('source', models.CharField(max_length=250, verbose_name='Источник связи, ссылка')),
                ('comment', models.TextField(blank=True, null=True, verbose_name='Примечания (внутренние)')),
                ('target', models.CharField(blank=True, max_length=250, null=True, verbose_name='Целевое действие')),
            ],
            options={
                'db_table': 'lid',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Place',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('addr', models.CharField(blank=True, max_length=200, null=True, verbose_name='Адрес')),
                ('source', models.CharField(blank=True, max_length=200, null=True, verbose_name='Название')),
            ],
            options={
                'db_table': 'event_place',
                'managed': False,
            },
        ),
        migrations.AddField(
            model_name='mailingdetail',
            name='outer_text_tg',
            field=models.TextField(blank=True, null=True, verbose_name='Готовый текст для viber, сформируется автоматически'),
        ),
        migrations.AddField(
            model_name='mailingdetail',
            name='outer_text_vi',
            field=models.TextField(blank=True, null=True, verbose_name='Готовый текст для viber, сформируется автоматически'),
        ),
        migrations.AlterField(
            model_name='mailingdetail',
            name='outer_text',
            field=models.TextField(verbose_name='Готовый текст для whatsapp, сформируется автоматически'),
        ),
        migrations.AddField(
            model_name='mailing',
            name='event_plan_id',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='smm.eventplan', verbose_name='По поводу мероприятия'),
        ),
        migrations.AddField(
            model_name='mailingdetail',
            name='lid_id',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='smm.lid', verbose_name='Связь с заявкой'),
        ),
    ]
